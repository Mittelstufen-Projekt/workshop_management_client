import { VerticalBox, HorizontalBox, StandardButton } from "std-widgets.slint";
import { TextField } from "../Widgets/TextField.slint";
import { Constants } from "../Constants.slint";
import { Button } from "../Widgets/Button.slint";
import { Material } from "../models/MaterialModel.slint";
import { Backend } from "../Backend.slint";
import { Palette } from "../Palette.slint";
import { ErrorMessage } from "../Widgets/Errormessage.slint";



export component MaterialTypePopUp inherits Rectangle {
    // TODO(jmeusel): Type Ã¤ndern
    in-out property <Material> material;
    
    HorizontalLayout {
        alignment: center;
        VerticalLayout {
            alignment: start;
            padding-top: 200px;
            Rectangle {
                background: Palette.control-color;
                width: 400px;
                height: 250px;
                border-width: 4px;
                border-color: Palette.accent-color;
                border-radius: 6px;
                VerticalBox {
                    HorizontalBox {
                        Text {
                            text: Constants.name + ":";
                        }

                        typeName := TextField {
                            text: material.name;
                        }
                    }

                    HorizontalBox {
                        Text {
                            text: Constants.description + ":";
                        }

                        typeDescription := TextField {
                            text: material.price;
                        }
                    }

                    Rectangle {
                        height: 20px;
                    }

                    HorizontalBox {
                        Button {
                            text: Constants.cancel;
                            clicked => {
                                Backend.hideMaterialTypePopUp();
                            }
                        }

                        Button {
                            text: Constants.save;
                            clicked => {
                                Backend.save-material-type(
                                    typeName.text,
                                    typeDescription.text,
                                );
                            }
                        }
                     
                    }
                    ErrorMessage {
                        title: Backend.materialTypePopUpErrorMessage;
                     }   
                }
            }
        }
    }
}
