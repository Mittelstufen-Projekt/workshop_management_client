import { VerticalBox, HorizontalBox, StandardButton } from "std-widgets.slint";
import { TextField } from "../Widgets/TextField.slint";
import { Constants } from "../Constants.slint";
import { Button } from "../Widgets/Button.slint";
import { Material } from "../models/MaterialModel.slint";
import { Backend } from "../Backend.slint";


// TODO(jmeusel): Rahmen drum oder ggf andere farbe

export component MaterialPopUp inherits Rectangle {
    // TODO(jmeusel): Type Ã¤ndern
    in-out property <Material> material;

    HorizontalLayout {
        alignment: center;
        VerticalLayout {
            alignment: start;
            padding-top: 200px;
            Rectangle {
                background: lightgray;
                width: 400px;
                height: 400px;
                VerticalBox {
                    HorizontalBox {
                        Text {
                            text: Constants.name + ":";
                        }

                        materialName := TextField {
                            text: material.name;
                        }
                    }

                    HorizontalBox {
                        Text {
                            text: Constants.price + ":";
                        }

                        materialPrice := TextField {
                            text: material.price;
                        }
                    }

                    HorizontalBox {
                        Text {
                            text: Constants.type + ":";
                        }

                        materialType := TextField {
                            text: material.type.name;
                        }
                    }

                    HorizontalBox {
                        Text {
                            text: Constants.amount + ":";
                        }

                        materialAmount := TextField {
                            text: material.quantity;
                        }
                    }

                    HorizontalBox {
                        Text {
                            text: Constants.remember_when + ":";
                        }

                        materialThreshold := TextField {
                            text: material.threshold-value;
                        }
                    }

                    HorizontalBox {
                        Text {
                            text: Constants.description + ":";
                        }

                        materialDescription := TextField {
                            text: material.description;
                        }
                    }

                    HorizontalBox {
                        Button {
                            text: Constants.cancel;
                            clicked => {
                                Backend.hideMaterialPopUp();
                        }
                        }

                        Button {
                            text: Constants.save;
                            clicked => {
                                Backend.save-materials(
                                materialName.text,
                                materialPrice.text,
                                materialType.text,
                                materialAmount.text,
                                materialThreshold.text,
                                materialDescription.text,
                               );
                            }
                        }
                    }
                }
            }
        }
    }
}
