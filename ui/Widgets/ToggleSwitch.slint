/*

    Author: Justin
    Date: 2024-03-01
    Description: A simple toggle switch

*/

import { Palette } from "../Palette.slint";

export component ToggleSwitch inherits Rectangle {
    callback toggled; // Called when the switch is toggled
    in-out property <string> text; // The text to display
    in-out property <bool> checked; // The state of the switch
    in-out property<bool> enabled <=> touch-area.enabled; // Whether the switch is enabled
    height: 20px;
    horizontal-stretch: 0;
    vertical-stretch: 0;

    HorizontalLayout {
        spacing: 8px;
        indicator := Rectangle {
            width: 40px;
            border-width: 1px;
            border-radius: root.height / 2;
            border-color: self.background.darker(25%);
            background: root.enabled ? (root.checked ? Palette.accent-color : Palette.control-color)  : Palette.control-color;
            animate background { duration: 100ms; }

            bubble := Rectangle {
                width: root.height - 8px;
                height: bubble.width;
                border-radius: bubble.height / 2;
                y: 4px;
                x: 4px + self.a * (indicator.width - bubble.width - 8px);
                property <float> a: root.checked ? 1 : 0;
                background: root.checked ? white : (root.enabled ? Palette.accent-color : gray);
                animate a, background { duration: 200ms; easing: ease;}
            }
        }

        txt := Text {
            font-size: Palette.font-size * 1px;
            min-width: max(100px, self.preferred-width);
            text: root.text;
            vertical-alignment: center;
            color: root.enabled ? Palette.text-color : gray;
        }

    }

    touch-area := TouchArea {
        width: root.width;
        height: root.height;
        clicked => {
            if (root.enabled) {
                root.checked = !root.checked;
                root.toggled();
            }
        }
    }

    width: indicator.width + 8px + txt.preferred-width;
}