import { TextField } from "TextField.slint";


import { Palette } from "../Palette.slint";

import { VerticalBox, HorizontalBox } from "std-widgets.slint";

import { ToggleSwitch } from "../Widgets/ToggleSwitch.slint";
import { TextField } from "../Widgets/TextField.slint";
import { Button } from "../Widgets/Button.slint";
import { Constants } from "../Constants.slint";
import { Backend } from "../Backend.slint";

// TODO(jmeusel): Bools um Search auszublenden, sowie buttons 

export component WMSAppbar inherits Rectangle {

    in-out property <string> title;
    in-out property <string> buttonTitleFirst;
    in-out property <string> buttonTitleSecond;
    in-out property <string> buttonTitleThird;
    callback onFirstButtonPressed();
    callback onSecondButtonPress();
    callback onThirdButtonPressed();
    // TODO(jmeusel): rename
    in-out property <bool> showFirstButton: true;
    in-out property <bool> showSecondButton: false;
    in-out property <bool> showThirdButton: false;
    in-out property <bool> showSearchField: true;
    in property <length> firstButtonWidth: 120px;
    in property <length> secondButtonWidth: 120px;
    in property <length> thirdButtonWidth: 120px;
    callback edited();
    in-out property <string> searchText <=> searchField.text;

    border-color: Palette.accent-color;
    border-width: 2px;
    border-radius: 8px;

    HorizontalBox {
        VerticalLayout {
            alignment: start;
            Text {
                text: title;
                color: Palette.accent-color;
                font-size: Palette.page-title-font-size * 1px;
            }
            HorizontalLayout {
                alignment: center;
                // 0 width, da ansonsten das alignment nicht mehr funktioniert
                width: 0;
                Text {
                    text: Constants.search;
                    vertical-alignment: center;
                    font-size: Palette.font-size * 1.9px;
                    color: Palette.text-color;
                }

                Rectangle {
                    width: 12px;
                }

                searchField:= TextField {
                    height: Palette.font-size * 2px;
                    edited => {
                        root.edited();
                    }
                }

                Rectangle {
                    width: 120px;
                }

                Button {
                    height: Palette.font-size * 2px;
                    text: buttonTitleFirst;
                    width: firstButtonWidth;
                    clicked => {
                        onFirstButtonPressed();
                    }
                    visible: showFirstButton;
                }

                Rectangle {
                    width: 120px;
                }

                Button {
                    height: Palette.font-size * 2px;
                    text: buttonTitleSecond;
                    width: secondButtonWidth;
                    clicked => {
                        onSecondButtonPress();
                    }
                    visible: showSecondButton;
                }

                Rectangle {
                    width: 120px;
                }

                Button {
                    height: Palette.font-size * 2px;
                    text: buttonTitleThird;
                    width: thirdButtonWidth;
                    clicked => {
                        onThirdButtonPressed();
                    }
                    visible: showThirdButton;
                }
            }
        }
    }
}
