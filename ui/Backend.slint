/*

    Author: Justin
    Description: Backend interface with all callbacks

*/
import { Material } from "../ui/models/MaterialModel.slint";
import { ProjectModel } from "../ui/models/ProjectModel.slint";

export global Backend {
    // Login View -------------------------------------------------------------------------------------
    callback request-login(); // Implemented
    callback request-exit(); // Implemented
    in-out property <string> username; // Implemented
    in-out property <string> password; // Implemented
    in-out property <string> login_error; // Implemented

    // Project View -------------------------------------------------------------------------------------
    callback request-logout(); // Implemented
    in-out property <[ProjectModel]> recentProjects;
    in-out property <[Material]> materialAlerts;

    // Project Detail View -------------------------------------------------------------------------------------
    // parameter: ID of the material to delete
    callback deleteMaterial(int);
    // Reihenfolge: projectName, clientName, projectStart, projectDeadline, CalculatedCosts, currentCosts
    callback save-project(string, string, string, string, string, string);
    in-out property <ProjectModel> project;
    // Property: id of the material which should be edited 
    //Route to PopUp (Material)
    callback editMaterial(int);
    

    // Project Management View -------------------------------------------------------------------------------------
    //Navigiert zu einem neuen Leeren Projekt und Ã¼bergibt lediglich eine neue Liste
    callback create_new_project(); // Implemented
    // parameter: ID of the project to delete
    callback delete-project-i(int);
    // parameter: Name of the project to show
    callback search-project(string);
    in-out property <[ProjectModel]> allProjects;
    // Reihenfolge: firstName, lastName, phone
    callback saveClient(string, string, string);

    // LagerOverview -------------------------------------------------------------------------------------
    // Reihenfolge: name, price, type, amount, thresholdValue, description
    callback save-materials(string, string, string, string, string, string);
    // parameter: Name of the material to show
    callback search-material(string);
    in-out property <[Material]> materials;
    callback save-material-type(string,string); // Implemented

    // Navigation: -------------------------------------------------------------------------------------
    callback route-to-project-view(); // Implemented
    callback route-to-project-management(); // Implemented
    callback route-to-warehouse-management(); // Implemented
    // parameter: ID of the project to show
    callback route-to-project-i(int); // Implemented
    callback showAddNewClientPopUp (); // Implemented
    callback showAddNewMaterialPopUp (); // Implemented
    callback showAddNewMaterialTypePopUp (); // Implemented
    callback hideMaterialPopUp();
    callback hideClientPopUp();

    // Variables for routing and navigation -------------------------------------------------------------------------------------
    in-out property <bool> showClientPopUp; // Implemented
    in-out property <bool> showMaterialPopUp; // Implemented
    in-out property <bool> showMaterialTypePopUp; // Implemented
    in-out property <bool> loginView; // Implemented
    in-out property <bool> projectView; // Implemented
    in-out property <bool> projectManagementView; // Implemented
    in-out property <bool> projectDetailView; // Implemented
    in-out property <bool> lagerOverviewView; // Implemented
}
