/*

    Author: Justin
    Description: Backend interface with all callbacks

*/

import { Material } from "../ui/models/MaterialModel.slint";
import { ProjectModel } from "../ui/models/ProjectModel.slint";

export global Backend {

    // Material exclusive
    callback update-material();
    // Property: id from the Material which should be deleted
    callback delete-material(int);
    callback create-material();

    // Login View -------------------------------------------------------------------------------------
    callback request-login(); 
    callback request-exit(); 
    in-out property <string> username; 
    in-out property <string> password; 
    in-out property <string> login_error; 

    // Project View -------------------------------------------------------------------------------------
    callback request-logout(); 
    in-out property <[ProjectModel]> recentProjects; 
    in-out property <[Material]> materialAlerts; 

    // Project Detail View -------------------------------------------------------------------------------------
    // parameter: ID of the material to delete
    callback deleteMaterial(int); 
    callback save-project(string, string, string, string, string, string);
    // parameter: ID of the material to edit
    callback editMaterial(int); 
    in-out property <ProjectModel> project; 

    // Project Management View -------------------------------------------------------------------------------------
    //Navigiert zu einem neuen Leeren Projekt und Ã¼bergibt lediglich eine neue Liste
    callback create_new_project(); 
    // parameter: ID of the project to delete
    callback delete-project-i(int); 
    // parameter: Name of the project to show
    callback search-project(string); 
    in-out property <[ProjectModel]> allProjects; 
    // Reihenfolge: firstName, lastName, phone
    callback saveClient(string, string, string); 

    // LagerOverview -------------------------------------------------------------------------------------
    callback save-materials(string, string, string, string, string, string);
    // parameter: Name of the material to show
    callback search-material(string); 
    in-out property <[Material]> materials; 
    callback save-material-type(string,string); 

    // Navigation: -------------------------------------------------------------------------------------
    callback route-to-project-view(); 
    callback route-to-project-management(); 
    callback route-to-warehouse-management(); 
    // parameter: ID of the project to show
    callback route-to-project-i(int); 
    callback showAddNewClientPopUp (); 
    callback showAddNewMaterialPopUp (); 
    callback showAddNewMaterialTypePopUp (); 
    callback hideMaterialPopUp(); 
    callback hideClientPopUp(); 
    callback hideMaterialTypePopUp(); 

    // Variables for routing and navigation -------------------------------------------------------------------------------------
    in-out property <bool> showClientPopUp; 
    in-out property <bool> showMaterialPopUp; 
    in-out property <bool> showMaterialTypePopUp; 
    in-out property <bool> loginView; 
    in-out property <bool> projectView; 
    in-out property <bool> projectManagementView; 
    in-out property <bool> projectDetailView; 
    in-out property <bool> lagerOverviewView; 

    in-out property <string> projectViewErrorMessage;
    in-out property <string> projectManagementErrorMessage;
    in-out property <string> projectDetailViewErrorMessage;
    in-out property <string> lagerOverviewErrorMessage;
    in-out property <string> clientPopUpErrorMessage;
    in-out property <string> materialPopUpErrorMessage;
    in-out property <string> materialTypePopUpErrorMessage;
}
