/*

    Author: Justin
    Description: Backend interface with all callbacks

*/
import { Material } from "../ui/models/MaterialModel.slint";
import { ProjectModel } from "../ui/models/ProjectModel.slint";


export global Backend {
    /*

        Callbacks

    */
    // Login View
    callback request-login(); // Implemented
    callback request-exit(); // Implemented

    // Project View
    callback request-logout(); // Implemented

    // Project Detail View
    // parameter: ID of the material to delete
    callback deleteMaterial(int);
    // Jasha: aktuell noch keine Materialien sondern nur die ProjektValues in folgender Reihenfole:
    // projectName, clientName, projectStart, projectDeadline, CalculatedCosts, currentCosts
    callback save-project-and-used-materials(string, string, string, string, string, string);

    // Project Management View
    //Navigiert zu einem neuen Leeren Projekt und 端bergibt lediglich eine neue Liste
    callback create_new_project(); // Implemented
    // parameter: ID of the project to delete
    callback delete-project-i(int);
    callback search-project(string);

    // AppBar
    callback goBack(); // Implemented

    // LagerOverview
    callback save-materials();
    callback search-material(string);

    // Navigation:
    callback route-to-project-management(); // Implemented
    callback route-to-warehouse-management(); // Implemented
    // parameter: ID of the project to show
    callback route-to-project-i(int); // Implemented
    callback showAddNewClientPopUp (); // Implemented
    callback showAddNewMaterialPopUp (); // Implemented
    callback showAddNewMateriaTypelPopUp (); 


    // TODO(jmeusel): Suche???????? aulagern jewails f端r kontent oder kann man das anders regeln?
    //// Justin: Mach eine function die mir einfach den inhalt des searchfeldes via parameter 端bergibt
    ////         jeweils f端r project und material



    /*

        Variables

    */
    // LoginView
    in-out property <string> username; // Implemented
    in-out property <string> password; // Implemented
    in-out property <string> login_error; // Implemented

    // ProjectView
    in-out property <[ProjectModel]> recentProjects;
    in-out property <[Material]> materialAlerts;

    // ProjectManagement
    in-out property <[ProjectModel]> allProjects;

    // ProjectDetailView
    in-out property <ProjectModel> project;

    // LagerOverview
    in-out property <[Material]> materials;

    // Variables for routing and navigation
    in-out property <bool> showClientPopUp;
    in-out property <bool> showMaterialPopUp;
    in-out property <bool> showMaterialTypePopUp: false;
    in-out property <bool> loginView: true;
    in-out property <bool> projectView: false;
    in-out property <bool> projectManagementView: false;
    in-out property <bool> projectDetailView: false;
    in-out property <bool> lagerOverviewView: false;



    in-out property <string> searchValue;
}
