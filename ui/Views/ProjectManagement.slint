import { HorizontalBox, VerticalBox, ScrollView } from "std-widgets.slint";
import { Appbar } from "../Widgets/Appbar.slint";
import { ProjectOverViewRowShort } from "../Widgets/ProjectOverViewRowShort.slint";
import { WMSAppbar } from "../Widgets/WMSAppbar.slint";
import { Constants } from "../Constants.slint";
import { RowTest } from "../Widgets/Rowtest.slint";
import { ProjectRowShort } from "../Widgets/ProjectRowShort.slint";
import { Palette } from "../Palette.slint";
import { Button } from "../Widgets/Button.slint";
import { ProjectModel } from "../models/ProjectModel.slint";
import { TitleSection } from "../Widgets/TitleSeciton.slint";
import { Backend } from "../Backend.slint";


//Refactor

// TODO(jmeusel): lässt sch nur bis zu gewissen bereichen Scrollen und lässt sich ebenfalls nicht horizontal scrollen

// TODO(jmeusel): Abstand des titles nach oben..
export component ProjectManagement inherits ScrollView {

    in-out property <[ProjectModel]> allProjects;
    //in-out property <bool> showPopup;

    VerticalBox {
        alignment: start;
        TitleSection {
            title: Constants.project_overview;
        }

        WMSAppbar {
            showSecondButton: true;
            buttonTitleFirst: Constants.create_new_project;
            buttonTitleSecond: Constants.add_client;
            firstButtonWidth: 200px;
            onFirstButtonPressed => {
                Backend.create_new_project();
            }
            onSecondButtonPress => {
                Backend.add-new-client();
            }
        }

        Rectangle {
            height: 50px;
        }

        // TODO(jmeusel): Button fehlt 
        // Button {
        //     width: 35px;
        //     height: 40px;
        //     text: "X";
        //     fontSizeMultiplier: 1.5px;
        // }
        // TODO(jmeusel): Abheben von der Liste Darunter
        ProjectRowShort {
            project: "Project Name";
            client: "Client";
            costs: "Costs";
            deadline: "Deadline";
        }

        for project[i] in allProjects: ProjectRowShort {
            client: allProjects[i].client.lastName;
            project: allProjects[i].name;
            costs: allProjects[i].current_costs;
            deadline: allProjects[i].project_deadline;
            clicked  => {
                Backend.route-to-project-i(i);
            }
        }
        Rectangle {
            max-width: 20px;
        }
    }
}
