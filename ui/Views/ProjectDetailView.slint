/*

    Author: Jasha
    Description: The detailed view of a project with all relevant information

*/

import { VerticalBox, HorizontalBox, Button, ComboBox } from "std-widgets.slint";
import { TextField } from "../Widgets/TextField.slint";
import { ProjectModel } from "../models/ProjectModel.slint";
import { ProjectView } from "ProjectView.slint";
import { Constants } from "../Constants.slint";
import { Palette } from "../Palette.slint";
import { WMSAppbar } from "../Widgets/WMSAppbar.slint";
import { TitleSection } from "../Widgets/TitleSeciton.slint";
import { MatDetailRow } from "../Widgets/MatDetailRow.slint";
import { MockModel } from "../models/MockModels.slint";
import { Material } from "../models/MaterialModel.slint";
import { Backend } from "../Backend.slint";
import { ClientModel } from "../models/ClientModel.slint";
import { MaterialType } from "../models/MaterialTypeModel.slint";
import { ProjectDetailRow } from "../Widgets/ProjectDetailRow.slint";
import { ErrorMessage } from "../Widgets/Errormessage.slint";


export component ProjectDetailView inherits VerticalLayout {
    in-out property <ProjectModel> project;
    in-out property <[string]> clients;
    in-out property <string> errorMessage;

    property <MaterialType> type;
    type: { name: "matType", description: "descrip" };


    property <string> suffix: ": ";
    property <length> topPadding: 20px;

    VerticalLayout {
        padding: topPadding;
        Rectangle {
            height: topPadding;
        }

        alignment: start;
        TitleSection {
            title: project.name;
        }
        Rectangle {height: 10px;}
        HorizontalLayout {
            alignment: start;
            ErrorMessage {
                title: errorMessage;
            }
        }
        HorizontalLayout {
            alignment: start;
            VerticalBox {
                Rectangle {
                    height: topPadding;
                }

                Rectangle {
                    height: 20px;
                }

                alignment: start;
                projectName := ProjectDetailRow {
                    title: Constants.project_name;
                    textFieldName: project.name;
                }

                Rectangle {
                    height: 20px;
                }
                HorizontalLayout {
                     Text {
                        vertical-alignment: center;
                        text: Constants.client;
                        color: Palette.accent-color;
                        font-size: Palette.font-size * 2px;
                    }
                    Rectangle {width: 210px;}
                    clientName := ComboBox {
                        model: clients;

                    }
                }
                Rectangle {
                    height: 20px;
                }

                projectStart := ProjectDetailRow {
                    title: Constants.project_start + suffix;
                    textFieldName: project.project-start;
                }

                Rectangle {
                    height: 20px;
                }

                projectDeadline := ProjectDetailRow {
                    title: Constants.project_deadline + suffix;
                    textFieldName: project.project-deadline;
                }

                Rectangle {
                    height: 20px;
                }

                projectCalculatedCosts := ProjectDetailRow {
                    title: Constants.calculated_costs + suffix;
                    textFieldName: project.calculated-costs;
                }

                Rectangle {
                    height: 20px;
                }

                projectCurrentCosts := ProjectDetailRow {
                    title: Constants.currentCosts + suffix;
                    textFieldName: project.current-costs;
                }
                Rectangle {
                    height: 20px;
                }
                Button {
                    text: Constants.save_project;
                    height: 30px;
                    width: 130px;
                    clicked => {
                        Backend.save-project(
                            projectName.textFieldName,
                            clientName.current-value,
                            projectStart.textFieldName,
                            projectDeadline.textFieldName,
                            projectCalculatedCosts.textFieldName,
                            projectCurrentCosts.textFieldName,
                        )
                    }
                }
            }

            Rectangle {
                width: 400px;
            }

            //Material Section
            VerticalLayout {
                Rectangle {
                    height: topPadding;
                }

                VerticalBox {
                    HorizontalBox {
                        Text {
                            text: Constants.name;
                            font-size: Palette.font-size * 1px;
                        }

                        Text {
                            text: Constants.type;
                            font-size: Palette.font-size * 1px;
                        }

                        Text {
                            text: Constants.amount;
                            font-size: Palette.font-size * 1px;
                        }
                    }

                    for material[i] in project.mats: MatDetailRow {
                        material: project.mats[i];
                        onEditClick => {
                            Backend.editMaterial(project.mats[i].id);
                        }
                        onDeleteClick => {
                            Backend.deleteMaterial(project.mats[i].id)
                        }
                    }
                }

                Rectangle {
                    height: 25px;
                }

                HorizontalLayout {
                    alignment: space-between;
                    Button {
                        text: Constants.add_material;
                        height: 30px;
                        width: 130px;
                        clicked => {
                            //Muss dies hier ein anderer Callback sein als der Urspr√ºngliche? 
                            Backend.showAddNewClientPopUp();
                        }
                    }

                    Rectangle {
                        width: 100px;
                    }
                }
            }
        }
    }
}
