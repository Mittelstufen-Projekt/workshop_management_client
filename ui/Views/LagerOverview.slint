import { WMSAppbar } from "../Widgets/WMSAppbar.slint";
import { VerticalBox, HorizontalBox, GridBox, Slider } from "std-widgets.slint";
import { ToggleSwitch } from "../Widgets/ToggleSwitch.slint";
import { TextField } from "../Widgets/TextField.slint";
import { CheckBox } from "../Widgets/CheckBox.slint";
import { Button } from "../Widgets/Button.slint";
import { Palette } from "../Palette.slint";
import { LagerText } from "../Widgets/LagerText.slint";
import { LagerRow } from "../Widgets/Lager/LagerRow.slint";
import { Material } from "../models/MaterialModel.slint";
import { Constants } from "../Constants.slint";
import { Backend } from "../Backend.slint";
import { TitleSection } from "../Widgets/TitleSeciton.slint";


// TODO(jmeusel): Material Count sollte Rot angezeigt werden falls der Wert unterschritten wird
export component LagerOverview inherits VerticalBox {
    in-out property <[Material]> materials;
    in-out property <string> searchText;
    property <length> topPadding: 20px;

    alignment: start;
    Rectangle {
        height: topPadding;
    }

    TitleSection {
        title: Constants.warehouse_management;
    }

    WMSAppbar {
        buttonTitleFirst: "Add Material";
        showSecondButton: true;
        onFirstButtonPressed => {
            Backend.showAddNewMaterialPopUp();
        }
        edited => {
            Backend.search-material(self.searchText);
        }
        buttonTitleSecond: "Add Material Type";
        secondButtonWidth: 167px;
        onSecondButtonPress => {
            Backend.showAddNewMaterialTypePopUp();
        }
    }

    Rectangle {
        height: 80px;
    }

    HorizontalBox {
        alignment: LayoutAlignment.start;
        
    }

    for material[i] in materials: LagerRow {
        name: materials[i].name;
        price: materials[i].price;
        // TODO(jmeusel): type is falsch, sollte dropdown sein..? Oder? oder vielleicht doch n string? Und alle strings(Types), 
            // werden dann in nh liste geworden? not sure
            type: materials[i].type;
        amount: materials[i].quantity;
        rememberWhen: "never";
        description: materials[i].description;
        onEditClicked => {
        }
        onDeleteClicked => {}
    }
}


/*
LagerText {
            label: "name";
        }

        Rectangle {
            width: 265px;
        }

        LagerText {
            label: "price";
        }

        Rectangle {
            width: 185px;
        }

        LagerText {
            label: "type";
        }

        Rectangle {
            width: 190px;
        }

        LagerText {
            label: "amount";
        }

        Rectangle {
            width: 150px;
        }

        LagerText {
            label: "remember when";
        }

        Rectangle {
            width: 35px;
        }

        LagerText {
            label: "description";
        }
*/