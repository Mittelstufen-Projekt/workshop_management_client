/*

    Author: Justin Rauch, Jasha Meusel
    Date: 2024-03-12
    Description: Main Project Overview for the Client

*/

// Importing Palette, Backend and Constants
import { Palette } from "../Palette.slint";
import { Backend } from "../Backend.slint";
import { Constants } from "../Constants.slint";

// Importing Standard Widgets
import { VerticalBox, HorizontalBox } from "std-widgets.slint";

// Importing selfmade Widgets
import { ToggleSwitch } from "../Widgets/ToggleSwitch.slint";
import { TextField } from "../Widgets/TextField.slint";
import { CheckBox } from "../Widgets/CheckBox.slint";
import { RowTest, RowBox } from "../Widgets/Rowtest.slint";
import { Button } from "../Widgets/Button.slint";
import { ProjectOverViewRowShort } from "../Widgets/ProjectOverViewRowShort.slint";
import { MaterialAlertShort } from "../Widgets/MaterialAlertShort.slint";
import { ProjectModel } from "../models/ProjectModel.slint";
import { Material } from "../models/MaterialModel.slint";
import { ProjectRowShort } from "../Widgets/ProjectRowShort.slint";

export component ProjectView inherits Rectangle {

    property <length> txt;
    txt: Palette.font-size * 1px;

    in-out property <[ProjectModel]> recentProjects;
    in-out property <[Material]> materialAlerts;
    VerticalBox {
        HorizontalBox {
            alignment: LayoutAlignment.end;
            Button {
                text: Constants.logout;
                clicked => {
                    Backend.request-logout();
                }
            }
        }

        HorizontalBox {
            VerticalBox {
                Button {
                    max-width: 300px;
                    text: Constants.project_management;
                    fontSizeMultiplier: 1.5px;
                    clicked => {
                        Backend.route-to-project-management();
                    }
                }

                Button {
                    max-width: 300px;
                    text: Constants.warehouse_management;
                    fontSizeMultiplier: 1.5px;
                    clicked => {
                        Backend.route-to-warehouse-management();
                    }
                }
            }

            //Leeres Rectangle um das Alignment zu beeinflussen
            Rectangle { }

            Text {
                text: "Carpenter management\nSystem";
                horizontal-alignment: center;
                color: Palette.text-color;
                font-size: Palette.font-size * 1.5px;
            }

            Rectangle { }
        }

        HorizontalLayout {
            height: txt + 50px;
            // TODO(jmeusel): ändern
            padding-left: root.padding-left + 20px;
            HorizontalBox {
                Text {
                    text: Constants.latest_projects;
                    font-size: Palette.font-size * 1.5px;
                    vertical-alignment: center;
                    color: Palette.accent-color;
                }
            }

            // TODO(jmeusel): anders lösen (responsive)
            Rectangle {
                width: 250px;
            }

            HorizontalBox {
                Text {
                    text: Constants.mat_alert;
                    font-size: Palette.font-size * 1.5px;
                    color: Palette.accent-color;
                }
            }
        }

        HorizontalBox {
            VerticalBox {
                for item[i] in recentProjects: ProjectRowShort {
                    project: recentProjects[i].name;
                    client: recentProjects[i].client.firstName + " " + recentProjects[i].client.lastName;
                    costs: recentProjects[i].current_costs;
                    deadline: recentProjects[i].project_deadline;
                    clicked => {
                        Backend.route-to-project-i(recentProjects[i].id);
                    }
                }
                Rectangle { }
            }

            //Material Section
            VerticalBox {
                // TODO(jmeusel): IF-Statement um quantity mit alert zu vergleichen
                for material[i] in materialAlerts: MaterialAlertShort {
                    materialName: materialAlerts[i].name;
                    count: materialAlerts[i].quantity;
                }
                Button {
                    fontSizeMultiplier: 1.5px;
                    text: Constants.show_more;
                    clicked => {
                        Backend.route-to-LagerOverview();
                    }
                }
            }
        }
    }
}
