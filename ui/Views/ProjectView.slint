/*

    Author: Justin Rauch, Jasha Meusel
    Date: 2024-03-12
    Description: Main Project Overview for the Client

*/

// Importing Palette, Backend and Constants
import { Palette } from "../Palette.slint";
import { Backend } from "../Backend.slint";
import { Constants } from "../Constants.slint";

// Importing Standard Widgets
import { VerticalBox, HorizontalBox } from "std-widgets.slint";

// Importing selfmade Widgets
import { ToggleSwitch } from "../Widgets/ToggleSwitch.slint";
import { TextField } from "../Widgets/TextField.slint";
import { CheckBox } from "../Widgets/CheckBox.slint";
import { RowTest, RowBox } from "../Widgets/Rowtest.slint";
import { Button } from "../Widgets/Button.slint";
import { ProjectOverViewRowShort } from "../Widgets/ProjectOverViewRowShort.slint";
import { MaterialAlertShort } from "../Widgets/MaterialAlertShort.slint";

// TODO(jmeusel): Ein Button zur Zurücknavigation fehlt noch
export component ProjectView inherits Rectangle {

    property <length> txt;
    txt: Palette.font-size * 1px;

    // TODO(jmeusel): bedarf klären aufgrund der Datentypen (müsste eigentlich eine Map sein)
    in-out property <[string]> recentProjects;
    recentProjects: ["Project", "Client", "current costs", "deadline"];

    VerticalBox {
        HorizontalBox {
            alignment: LayoutAlignment.end;
            Button {
                text: "Logout";
                clicked => {
                    Backend.request-logout();
                }
            }
        }

        HorizontalBox {
            //alignment: LayoutAlignment.start;
            VerticalBox {
                Button {
                    max-width: 300px;
                    text: "Project - management";
                }

                Button {
                    max-width: 300px;
                    text: "Warehouse - management";
                }
            }

            Rectangle { }

            //Leeres Rectangle um das Alignment zu beeinflussen
            Text {
                text: "Stupid Carpenter\nmanagement";
                font-size: Palette.font-size * 1px;
            }

            Rectangle { }
        }

        HorizontalLayout {
            height: txt + 50px;
            // TODO(jmeusel): ändern
            padding-left: root.padding-left + 20px;
            HorizontalBox {
                Text {
                    text: "Latest Projects:";
                    font-size: Palette.font-size * 1.5px;
                    vertical-alignment: center;
                    color: Palette.accent-color;
                }
            }

            // TODO(jmeusel): anders lösen (responsive)
            Rectangle {
                width: 250px;
            }

            HorizontalBox {
                Text {
                    text: "Material-alert:";
                    font-size: Palette.font-size * 1.5px;
                    color: Palette.accent-color;
                }
            }
        }

        // TODO(jmeusel): durch schleifen umsetzen
          HorizontalBox {
            VerticalBox {
                ProjectOverViewRowShort {
                    project: "ProjectName";
                    client: "Client";
                    costs: "curent costs";
                    deadline: "deadline";
                }

                ProjectOverViewRowShort {
                    project: "ProjectName";
                    client: "Client";
                    costs: "curent costs";
                    deadline: "deadline";
                }

                ProjectOverViewRowShort {
                    project: "ProjectName";
                    client: "Client";
                    costs: "curent costs";
                    deadline: "deadline";
                }

                Rectangle { }
            }

            VerticalBox {
                MaterialAlertShort {
                    materialName: "Material";
                    count: 5;
                }

                MaterialAlertShort {
                    materialName: "Material";
                    count: 5;
                }

                MaterialAlertShort {
                    materialName: "Material";
                    count: 5;
                }

                MaterialAlertShort {
                    materialName: "Material";
                    count: 5;
                }

                MaterialAlertShort {
                    materialName: "Material";
                    count: 5;
                }

                MaterialAlertShort {
                    materialName: "Material";
                    count: 5;
                }

                Button {
                    text: "Show more";
                    clicked => {
                        // TODO(jmeusel): implement route to MaterialAlert
                }
                }
            }
        }
    }
}

/*
  HorizontalBox {
        VerticalBox {
            HorizontalBox {
                VerticalBox {
                    width: root.width * 0.03;
                    height: root.width * 0.2;
                    Button {
                        text: "Project Overview";
                        height: 50px;
                        width: 300px;
                    }
                    Button {
                        text: "Warehouse Management";
                        height: 50px;
                        width: 300px;
                    }
                    Text {
                        text: "Latest Projects:";
                        font-size: Palette.font-size * 1px;
                        color: Palette.text-color;
                    }
                    VerticalBox {
                        RowTest {
                            project: "Project";
                            client: "client";
                            costs: "current costs";
                            deadline: "deadline";
                        }
                        RowTest {
                            project: "Project";
                            client: "client";
                            costs: "current costs";
                            deadline: "deadline";
                        }
                        RowTest {
                            project: "Project";
                            client: "client";
                            costs: "current costs";
                            deadline: "deadline";
                        }
                        RowBox {}
                    }
                }
                Text {
                    text: "Workshop Management \n              System";
                    color: Palette.text-color;
                    font-size: Palette.font-size * 1.2px;
                }
            }
        }
        VerticalBox {
            Button {
                text: "Logout";
            }
        }
    }
*/



